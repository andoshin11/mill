// THIS FILE IS GENERATED BY CODE GENERATOR. DO NOT CHANGE MANUALLY.
/* tslint:disable */
/* eslint-disable */
import { APIRequest } from './types'
import * as operations from './gen-ts'

<%_ operations.forEach(operation => { _%>
export class <%= operation.name %> implements APIRequest<operations.<%= operation.name%>Response> {
  response: operations.<%= operation.name%>Response;
  method = "<%= operation.method.toUpperCase() %>" as const;
  path: string;
<%_ if (!helper.isVoid(operation.queryParameter) || !helper.isVoid(operation.requestBody)) { _%>
  params: operations.<%= operation.name%>Request
<%_ }; _%>

  constructor(<%_ if (!helper.isVoid(operation.queryParameter) || !helper.isVoid(operation.requestBody) || !helper.isVoid(operation.pathParameter)) { _%>args: {
    <%_ if (!helper.isVoid(operation.queryParameter) || !helper.isVoid(operation.requestBody)) { _%>params: operations.<%= operation.name%>Request;<%_ }; _%>
    <%_ if (!helper.isVoid(operation.pathParameter)) { _%>pathParameter: operations.<%= operation.name%>PathParameter;<%_ }; _%>
  }<%_ }; _%>) {
<%_ if (!helper.isVoid(operation.queryParameter) || !helper.isVoid(operation.requestBody)) { _%>
    this.params = args.params
<%_ }; _%>
  this.path = `<%= helper.toTemplateLiteral(operation.path) %>`
  }
}

<%_ }); _%>
