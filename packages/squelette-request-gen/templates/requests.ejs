// THIS FILE IS GENERATED BY CODE GENERATOR. DO NOT CHANGE MANUALLY.
/* tslint:disable */
/* eslint-disable */
import { APIRequest, HTTPMethod } from './types'
import { <%= namespace %> } from './gen-ts'

<%_ Object.entries(tags).forEach(([tag, operations]) => { _%>

<%_ operations.forEach(operation => { _%>
export class <%= operation.name %> implements APIRequest<<%= namespace %>.<%= tag %>.<%= operation.name%>Response> {
  response: <%= namespace %>.<%= tag %>.<%= operation.name%>Response;
  method = HTTPMethod["<%= operation.method %>"];
  path: string;
  params<%= helper.isVoid(operation.queryParameter) && helper.isVoid(operation.requestBody) ? "?" : "" %>: <%= namespace %>.<%= tag %>.<%= operation.name%>Request

  constructor(args: {
    params<%= helper.isVoid(operation.queryParameter) && helper.isVoid(operation.requestBody) ? "?" : "" %>: <%= namespace %>.<%= tag %>.<%= operation.name%>Request;
    pathParameter<%= helper.isVoid(operation.pathParameter) ? "?" : "" %>: <%= namespace %>.<%= tag %>.<%= operation.name%>PathParameter;
  }) {
    const { params, pathParameter } = args
    this.params = params
    this.path = `<%= helper.toTemplateLiteral(operation.path) %>`
  }
}

<%_ }); _%>

<%_ }); _%>
